Imports System.Net
Imports System.Text
Imports System.IO
Public Class xss_header_scanner

    Dim i As Integer = 0
    Dim oparam, omethod, oabs, oproto, ohost, oref, ousr, oacpt, octype, urlz As String
    Dim x As String

    Public login As New CookieContainer




    Private Sub post_scanner_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        On Error Resume Next
        ListView1.ShowItemToolTips = True
        ListView1.View = View.Details
        ' Set column header
        ListView1.Columns.Clear()
        ListView1.Columns.Add("Name", 100)
        ListView1.Columns.Add("Value", 100)

        ListView2.ShowItemToolTips = True
        ListView2.View = View.Details
        ' Set column header
        ListView2.Columns.Clear()
        ListView2.Columns.Add("Name", 100)
        ListView2.Columns.Add("Value", 100)
        'list view ends
        tcount.Text = xenotix_main.payloadcounter.Text
        Button6.Enabled = False
        Button4.Enabled = False
        Button5.Enabled = False
        Button8.Enabled = False
    End Sub



    Private Sub Timer1_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer1.Tick
        Try
            urlz = ComboBox1.Text + host.Text + abs.Text
            Dim tparam As String = ""
            Dim tempCookies As New CookieContainer

            If (i <= xenotix_main.RichTextBox1.Lines.Length) Then
                If (i = xenotix_main.RichTextBox1.Lines.Length) Then
                    cnt.Text = xenotix_main.RichTextBox1.Lines.Length
                Else
                    cnt.Text = i + 1
                End If

                xenotix_main.textxss.Text = xenotix_main.RichTextBox1.Lines(i)
                If method.Text.Contains("POST") Then
                    headers.Text = ""
                    Try
                        tparam = oparam.Replace("[X]", xenotix_main.textxss.Text)
                        cntnt.Text = tparam
                        tparam = omethod.Replace("[X]", xenotix_main.textxss.Text)
                        method.Text = tparam
                        tparam = oabs.Replace("[X]", xenotix_main.textxss.Text)
                        abs.Text = tparam
                        tparam = ohost.Replace("[X]", xenotix_main.textxss.Text)
                        host.Text = tparam
                        tparam = oref.Replace("[X]", xenotix_main.textxss.Text)
                        ref.Text = tparam
                        tparam = ousr.Replace("[X]", xenotix_main.textxss.Text)
                        usr.Text = tparam
                        tparam = oacpt.Replace("[X]", xenotix_main.textxss.Text)
                        acpt.Text = tparam
                        tparam = octype.Replace("[X]", xenotix_main.textxss.Text)
                        ctyp.Text = tparam
                    Catch ex As Exception
                    End Try
                    Dim postReq As HttpWebRequest = DirectCast(WebRequest.Create(urlz), HttpWebRequest)
                    Dim encoding As New UTF8Encoding
                    Dim postData As String = cntnt.Text
                    Dim byteData As Byte() = encoding.GetBytes(postData)

                    'Proxy support
                    If My.Settings.proxy_enabled = True Then

                        Try
                            Dim myProxy As New WebProxy()
                            Dim newUri As New Uri("http://" & My.Settings.proxy_host & ":" & My.Settings.proxy_port)
                            myProxy.Address = newUri
                            myProxy.Credentials = New NetworkCredential(My.Settings.proxy_us, My.Settings.proxy_ps)
                            postReq.Proxy = myProxy
                        Catch ex As Exception
                            MsgBox(ex.Message.ToString, vbCritical)
                        End Try

                    End If
                    'cookie addition
                    Dim cookie_countp As Integer = 0
                    While cookie_countp < ListView1.Items.Count
                        tempCookies.Add(New Uri(ComboBox1.Text + host.Text + abs.Text), _
                    New Cookie(ListView1.Items(cookie_countp).Text, ListView1.Items(cookie_countp).SubItems(1).Text))
                        cookie_countp = cookie_countp + 1
                    End While


                    'cookie addition
                    postReq.ProtocolVersion = New System.Version(proto.Text)
                    postReq.Method = method.Text
                    postReq.KeepAlive = True
                    postReq.CookieContainer = tempCookies
                    postReq.Referer = ref.Text
                    postReq.ContentType = ctyp.Text
                    postReq.UserAgent = usr.Text
                    postReq.ContentLength = byteData.Length
                    clen.Text = byteData.Length
                    postReq.Accept = acpt.Text
                    postReq.Headers.Add("Keep-Alive", "115")
                    'ADD HEADER
                    Dim HEADC As Integer = 0
                    While HEADC < ListView2.Items.Count
                        postReq.Headers.Add(ListView2.Items(HEADC).Text, ListView2.Items(HEADC).SubItems(1).Text)
                        HEADC = HEADC + 1
                    End While
                    'END
                    Try
                        Dim postreqstream As Stream = postReq.GetRequestStream()
                        postreqstream.Write(byteData, 0, byteData.Length)
                        postreqstream.Close()
                    Catch xx As Exception
                        MsgBox(xx.Message.ToString, vbCritical)
                    End Try
                    'RESPONSE
                    Try
                        Dim myHttpWebResponse As HttpWebResponse = DirectCast(postReq.GetResponse(), HttpWebResponse)
                        tempCookies.Add(myHttpWebResponse.Cookies)
                        headers.Text = "HTTP/" + myHttpWebResponse.ProtocolVersion.ToString + " " + Str(myHttpWebResponse.StatusCode) + " " + myHttpWebResponse.StatusDescription.ToString + ControlChars.CrLf

                        Dim i As Integer
                        While i < myHttpWebResponse.Headers.Count
                            headers.Text += myHttpWebResponse.Headers.Keys(i) + ":" + myHttpWebResponse.Headers(i) + ControlChars.CrLf
                            i = i + 1
                        End While
                        Dim postreqreader As New StreamReader(myHttpWebResponse.GetResponseStream, encoding)
                        x = postreqreader.ReadToEnd
                        body.Text = x
                        myHttpWebResponse.Close()
                        Button3.Enabled = False
                    Catch xxx As Exception
                        headers.Text = xxx.Message.ToString
                    End Try

                ElseIf method.Text.Contains("GET") Then
                    headers.Text = ""
                    Try
                        tparam = oabs.Replace("[X]", xenotix_main.textxss.Text)
                        abs.Text = tparam
                        tparam = ohost.Replace("[X]", xenotix_main.textxss.Text)
                        host.Text = tparam
                        tparam = oref.Replace("[X]", xenotix_main.textxss.Text)
                        ref.Text = tparam
                        tparam = ousr.Replace("[X]", xenotix_main.textxss.Text)
                        usr.Text = tparam
                        tparam = oacpt.Replace("[X]", xenotix_main.textxss.Text)
                        acpt.Text = tparam

                    Catch ex As Exception
                    End Try
                    Try

                        Dim postReq As HttpWebRequest = CType(WebRequest.Create(urlz), HttpWebRequest)
                        If My.Settings.proxy_enabled = True Then

                            Try
                                Dim myProxy As New WebProxy()
                                Dim newUri As New Uri("http://" & My.Settings.proxy_host & ":" & My.Settings.proxy_port)
                                myProxy.Address = newUri
                                myProxy.Credentials = New NetworkCredential(My.Settings.proxy_us, My.Settings.proxy_ps)
                                postReq.Proxy = myProxy
                            Catch ex As Exception
                                MsgBox(ex.Message.ToString, vbCritical)
                            End Try

                        End If

                        'cookie addition
                        Dim cookie_count As Integer = 0
                        While cookie_count < ListView1.Items.Count

                            tempCookies.Add(New Uri(ComboBox1.Text + host.Text + abs.Text), _
                        New Cookie(ListView1.Items(cookie_count).Text, ListView1.Items(cookie_count).SubItems(1).Text))
                            cookie_count = cookie_count + 1
                        End While


                        'cookie addition
                        postReq.ProtocolVersion = New System.Version(proto.Text)
                        postReq.Method = method.Text
                        postReq.KeepAlive = True
                        postReq.CookieContainer = tempCookies
                        postReq.Referer = ref.Text
                        postReq.ContentType = ctyp.Text
                        postReq.UserAgent = usr.Text
                        postReq.Accept = acpt.Text
                        postReq.Headers.Add("Keep-Alive", "115")
                        'ADD HEADER
                        Dim HEADC As Integer = 0
                        While HEADC < ListView2.Items.Count
                            postReq.Headers.Add(ListView2.Items(HEADC).Text, ListView2.Items(HEADC).SubItems(1).Text)
                            HEADC = HEADC + 1
                        End While
                        'END
                        'RESPONSE
                        Dim myHttpWebResponse As HttpWebResponse = CType(postReq.GetResponse(), HttpWebResponse)
                        headers.Text += "HTTP/" + myHttpWebResponse.ProtocolVersion.ToString + " " + Str(myHttpWebResponse.StatusCode) + " " + myHttpWebResponse.StatusDescription.ToString + ControlChars.CrLf
                        Dim i As Integer
                        While i < myHttpWebResponse.Headers.Count
                            headers.Text += myHttpWebResponse.Headers.Keys(i) + ":" + myHttpWebResponse.Headers(i) + ControlChars.CrLf
                            i = i + 1
                        End While

                        Dim postreqreader As New StreamReader(myHttpWebResponse.GetResponseStream)
                        x = postreqreader.ReadToEnd
                        body.Text = x
                        myHttpWebResponse.Close()
                    Catch xxx As Exception
                        headers.Text = xxx.Message.ToString
                    End Try
                    'TRACE REQUEST
                ElseIf method.Text.Contains("TRACE") Then
                    headers.Text = ""
                    Try
                        tparam = oabs.Replace("[X]", xenotix_main.textxss.Text)
                        abs.Text = tparam
                        tparam = ohost.Replace("[X]", xenotix_main.textxss.Text)
                        host.Text = tparam
                        tparam = oref.Replace("[X]", xenotix_main.textxss.Text)
                        ref.Text = tparam
                        tparam = ousr.Replace("[X]", xenotix_main.textxss.Text)
                        usr.Text = tparam
                        tparam = oacpt.Replace("[X]", xenotix_main.textxss.Text)
                        acpt.Text = tparam

                    Catch ex As Exception
                    End Try
                    Try

                        Dim postReq As HttpWebRequest = CType(WebRequest.Create(urlz), HttpWebRequest)
                        If My.Settings.proxy_enabled = True Then

                            Try
                                Dim myProxy As New WebProxy()
                                Dim newUri As New Uri("http://" & My.Settings.proxy_host & ":" & My.Settings.proxy_port)
                                myProxy.Address = newUri
                                myProxy.Credentials = New NetworkCredential(My.Settings.proxy_us, My.Settings.proxy_ps)
                                postReq.Proxy = myProxy
                            Catch ex As Exception
                                MsgBox(ex.Message.ToString, vbCritical)
                            End Try

                        End If

                        'cookie addition
                        Dim cookie_count As Integer = 0
                        While cookie_count < ListView1.Items.Count

                            tempCookies.Add(New Uri(ComboBox1.Text + host.Text + abs.Text), _
                        New Cookie(ListView1.Items(cookie_count).Text, ListView1.Items(cookie_count).SubItems(1).Text))
                            cookie_count = cookie_count + 1
                        End While


                        'cookie addition
                        postReq.ProtocolVersion = New System.Version(proto.Text)
                        postReq.Method = method.Text
                        postReq.KeepAlive = True
                        postReq.CookieContainer = tempCookies
                        postReq.Referer = ref.Text
                        postReq.ContentType = ctyp.Text
                        postReq.UserAgent = usr.Text
                        postReq.Accept = acpt.Text
                        postReq.Headers.Add("Keep-Alive", "115")
                        'ADD HEADER
                        Dim HEADC As Integer = 0
                        While HEADC < ListView2.Items.Count
                            postReq.Headers.Add(ListView2.Items(HEADC).Text, ListView2.Items(HEADC).SubItems(1).Text)
                            HEADC = HEADC + 1
                        End While
                        'END
                        'RESPONSE
                        Dim myHttpWebResponse As HttpWebResponse = CType(postReq.GetResponse(), HttpWebResponse)
                        headers.Text += "HTTP/" + myHttpWebResponse.ProtocolVersion.ToString + " " + Str(myHttpWebResponse.StatusCode) + " " + myHttpWebResponse.StatusDescription.ToString + ControlChars.CrLf
                        Dim i As Integer
                        While i < myHttpWebResponse.Headers.Count
                            headers.Text += myHttpWebResponse.Headers.Keys(i) + ":" + myHttpWebResponse.Headers(i) + ControlChars.CrLf
                            i = i + 1
                        End While

                        Dim postreqreader As New StreamReader(myHttpWebResponse.GetResponseStream)
                        x = postreqreader.ReadToEnd
                        body.Text = x
                        myHttpWebResponse.Close()
                    Catch xxx As Exception
                        headers.Text = xxx.Message.ToString
                    End Try
                    'TRACE ENDS
                Else
                    MsgBox("Unsupported Method!", vbCritical)

                End If
                '============================

                Try

                    If xenotix_main.ie.Checked = True And xenotix_main.gc.Checked = True And xenotix_main.ff.Checked = True Then
                        xenotix_main.web.DocumentText = x
                        xenotix_main.webkit.LoadHtml(x)
                        xenotix_main.gecko.LoadHtml(x)
                    ElseIf xenotix_main.ie.Checked = True And xenotix_main.gc.Checked = True And xenotix_main.ff.Checked = False Then
                        xenotix_main.web.DocumentText = x
                        xenotix_main.webkit.LoadHtml(x)

                    ElseIf xenotix_main.ie.Checked = True And xenotix_main.gc.Checked = False And xenotix_main.ff.Checked = False Then
                        xenotix_main.web.DocumentText = x

                    ElseIf xenotix_main.ie.Checked = True And xenotix_main.gc.Checked = False And xenotix_main.ff.Checked = True Then
                        xenotix_main.web.DocumentText = x

                        xenotix_main.gecko.LoadHtml(x)
                    ElseIf xenotix_main.ie.Checked = False And xenotix_main.gc.Checked = False And xenotix_main.ff.Checked = True Then

                        xenotix_main.gecko.LoadHtml(x)
                    ElseIf xenotix_main.ie.Checked = False And xenotix_main.gc.Checked = True And xenotix_main.ff.Checked = False Then

                        xenotix_main.webkit.LoadHtml(x)

                    ElseIf xenotix_main.ie.Checked = False And xenotix_main.gc.Checked = True And xenotix_main.ff.Checked = True Then

                        xenotix_main.webkit.LoadHtml(x)
                        xenotix_main.gecko.LoadHtml(x)
                    End If
                Catch p As Exception
                End Try
                i = i + 1
            Else
                Timer1.Enabled = False
                MsgBox("Test Finished!", vbInformation)
                Button7.Enabled = True
                Button6.Enabled = False
                Button4.Enabled = False
                Button5.Enabled = False
                Button8.Enabled = False
                i = 0
                cnt.Text = i
            End If
        Catch exx As Exception
            MsgBox(exx.Message.ToString, vbCritical)
        End Try
    End Sub




    Private Sub method_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles method.SelectedIndexChanged
        If method.Text = "GET" Or method.Text = "TRACE" Then
            cntnt.Enabled = False
            ctyp.Enabled = False
        Else
            cntnt.Enabled = True
            ctyp.Enabled = True
        End If
    End Sub

    Private Sub Button1_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
        On Error Resume Next
        If Not (cname.Text = "") And (Not (cvalue.Text = "")) Then

            Dim TempStr(1) As String
            Dim TempNode As ListViewItem
            TempStr(0) = cname.Text
            TempStr(1) = cvalue.Text
            TempNode = New ListViewItem(TempStr)
            ListView1.Items.Add(TempNode)
            cname.Text = ""
            cvalue.Text = ""
        End If
    End Sub

    Private Sub Button9_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button9.Click
        On Error Resume Next
        For Each i As ListViewItem In ListView1.SelectedItems
            ListView1.Items.Remove(i)
        Next
    End Sub

    Private Sub Button10_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button10.Click
        On Error Resume Next
        ListView1.Items.Clear()
    End Sub


    Private Sub Button7_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button7.Click
        On Error Resume Next

        Dim flg As Integer = 0
        If TextBox3.Text < 1 Then
            MsgBox("Time Interval should not be less than 1 sec", vbInformation)
            flg = 1
        End If
        If Not (method.Text.Contains("[X]") Or abs.Text.Contains("[X]") Or host.Text.Contains("[X]") Or ref.Text.Contains("[X]") Or usr.Text.Contains("[X]") Or acpt.Text.Contains("[X]") Or ctyp.Text.Contains("[X]") Or cntnt.Text.Contains("[X]")) Then
            MsgBox("Replace the Element with [X] to start testing.", vbInformation)
            flg = 1
        End If

        If flg = 0 Then
            oparam = cntnt.Text
            omethod = method.Text
            oabs = abs.Text
            oproto = proto.Text
            ohost = host.Text
            oref = ref.Text
            ousr = usr.Text
            oacpt = acpt.Text
            octype = ctyp.Text

            Dim t As Integer = Convert.ToInt32(TextBox3.Text)
            t = t * 1000
            Timer1.Interval = t
            Timer1.Enabled = True
            Button7.Enabled = False
            Button6.Enabled = True
            Button4.Enabled = True
            Button5.Enabled = True
            Button8.Enabled = True
        End If
    End Sub

    Private Sub Button6_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button6.Click
        On Error Resume Next
        Timer1.Enabled = False
        Button6.Visible = False
        Button8.Visible = True
    End Sub

    Private Sub Button8_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button8.Click
        On Error Resume Next
        Timer1.Enabled = True
        Button8.Visible = False
        Button6.Visible = True
    End Sub

    Private Sub Button4_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button4.Click
        On Error Resume Next
        If i <= tcount.Text Then
            i = i + 1
            cnt.Text = i + 1
        End If
    End Sub

    Private Sub Button5_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button5.Click
        On Error Resume Next
        Dim x As Integer = InputBox("Enter the Payload position index", "Skip to Payload")
        If x <= tcount.Text Then
            i = x
            cnt.Text = x
        Else
            MsgBox("Invalid Payload index!", vbCritical)
        End If
    End Sub

    Private Sub Button3_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button3.Click
        If host.Text = "" Then
            MsgBox("Provide a Host Name", vbCritical)
        Else
            headers.Text = ""
            body.Text = ""
            urlz = ComboBox1.Text + host.Text + abs.Text

            Dim tempCookies As New CookieContainer
            If method.Text.Contains("POST") Then
                headers.Text = ""
                Dim postReq As HttpWebRequest = DirectCast(WebRequest.Create(urlz), HttpWebRequest)
                Dim encoding As New UTF8Encoding
                Dim postData As String = cntnt.Text
                Dim byteData As Byte() = encoding.GetBytes(postData)


                'cookie addition
                Dim cookie_countp As Integer = 0
                While cookie_countp < ListView1.Items.Count
                    tempCookies.Add(New Uri(urlz), _
                New Cookie(ListView1.Items(cookie_countp).Text, ListView1.Items(cookie_countp).SubItems(1).Text))
                    cookie_countp = cookie_countp + 1
                End While


                'cookie addition


                'Proxy support
                If My.Settings.proxy_enabled = True Then

                    Try
                        Dim myProxy As New WebProxy()
                        Dim newUri As New Uri("http://" & My.Settings.proxy_host & ":" & My.Settings.proxy_port)
                        myProxy.Address = newUri
                        myProxy.Credentials = New NetworkCredential(My.Settings.proxy_us, My.Settings.proxy_ps)
                        postReq.Proxy = myProxy
                    Catch ex As Exception
                        MsgBox(ex.Message.ToString, vbCritical)
                    End Try
                End If
                postReq.ProtocolVersion = New System.Version(proto.Text)
                postReq.Method = method.Text
                postReq.KeepAlive = True
                postReq.CookieContainer = tempCookies
                postReq.Referer = ref.Text
                postReq.ContentType = ctyp.Text
                postReq.UserAgent = usr.Text
                postReq.ContentLength = byteData.Length
                clen.Text = byteData.Length
                postReq.Accept = acpt.Text
                postReq.Headers.Add("Keep-Alive", "115")
                'ADD HEADER
                Dim HEADC As Integer = 0
                While HEADC < ListView2.Items.Count
                    postReq.Headers.Add(ListView2.Items(HEADC).Text, ListView2.Items(HEADC).SubItems(1).Text)
                    HEADC = HEADC + 1
                End While
                'END
                Try
                    Dim postreqstream As Stream = postReq.GetRequestStream()
                    postreqstream.Write(byteData, 0, byteData.Length)
                    postreqstream.Close()
                Catch xx As Exception
                    MsgBox(xx.Message.ToString, vbCritical)
                End Try
                'RESPONSE
                Try

                    Dim myHttpWebResponse As HttpWebResponse = DirectCast(postReq.GetResponse(), HttpWebResponse)
                    tempCookies.Add(myHttpWebResponse.Cookies)
                    headers.Text = "HTTP/" + myHttpWebResponse.ProtocolVersion.ToString + " " + Str(myHttpWebResponse.StatusCode) + " " + myHttpWebResponse.StatusDescription.ToString + ControlChars.CrLf

                    Dim i As Integer
                    While i < myHttpWebResponse.Headers.Count
                        headers.Text += myHttpWebResponse.Headers.Keys(i) + ":" + myHttpWebResponse.Headers(i) + ControlChars.CrLf
                        i = i + 1
                    End While
                    Dim postreqreader As New StreamReader(myHttpWebResponse.GetResponseStream, encoding)
                    x = postreqreader.ReadToEnd
                    body.Text = x
                    myHttpWebResponse.Close()
                Catch xxx As Exception
                    headers.Text = xxx.Message.ToString
                End Try

                'REQUEST GET
            ElseIf method.Text.Contains("GET") Then
                headers.Text = ""
                Try
                    Dim postReq As HttpWebRequest = CType(WebRequest.Create(urlz), HttpWebRequest)
                    If My.Settings.proxy_enabled = True Then
                        Try
                            Dim myProxy As New WebProxy()
                            Dim newUri As New Uri("http://" & My.Settings.proxy_host & ":" & My.Settings.proxy_port)
                            myProxy.Address = newUri
                            myProxy.Credentials = New NetworkCredential(My.Settings.proxy_us, My.Settings.proxy_ps)
                            postReq.Proxy = myProxy
                        Catch ex As Exception
                            MsgBox(ex.Message.ToString, vbCritical)
                        End Try

                    End If

                    'cookie addition
                    Dim cookie_count As Integer = 0
                    While cookie_count < ListView1.Items.Count
                        tempCookies.Add(New Uri(urlz), _
                    New Cookie(ListView1.Items(cookie_count).Text, ListView1.Items(cookie_count).SubItems(1).Text))
                        cookie_count = cookie_count + 1
                    End While


                    'cookie addition
                    postReq.ProtocolVersion = New System.Version(proto.Text)
                    postReq.Method = method.Text
                    postReq.KeepAlive = True
                    postReq.CookieContainer = tempCookies
                    postReq.Referer = ref.Text
                    postReq.ContentType = ctyp.Text
                    postReq.UserAgent = usr.Text
                    postReq.Accept = acpt.Text
                    postReq.Headers.Add("Keep-Alive", "115")
                    'ADD HEADER
                    Dim HEADC As Integer = 0
                    While HEADC < ListView2.Items.Count
                        postReq.Headers.Add(ListView2.Items(HEADC).Text, ListView2.Items(HEADC).SubItems(1).Text)
                        HEADC = HEADC + 1
                    End While
                    'END
                    'RESPONSE
                    Dim myHttpWebResponse As HttpWebResponse = CType(postReq.GetResponse(), HttpWebResponse)
                    headers.Text += "HTTP/" + myHttpWebResponse.ProtocolVersion.ToString + " " + Str(myHttpWebResponse.StatusCode) + " " + myHttpWebResponse.StatusDescription.ToString + ControlChars.CrLf
                    Dim i As Integer
                    While i < myHttpWebResponse.Headers.Count
                        headers.Text += myHttpWebResponse.Headers.Keys(i) + ":" + myHttpWebResponse.Headers(i) + ControlChars.CrLf
                        i = i + 1
                    End While

                    Dim postreqreader As New StreamReader(myHttpWebResponse.GetResponseStream)
                    x = postreqreader.ReadToEnd
                    body.Text = x
                    myHttpWebResponse.Close()

                Catch xxx As Exception
                    headers.Text = xxx.Message.ToString
                End Try
                ''REQUEST TRACE
            ElseIf method.Text.Contains("TRACE") Then
                headers.Text = ""
                Try
                    Dim postReq As HttpWebRequest = CType(WebRequest.Create(urlz), HttpWebRequest)
                    If My.Settings.proxy_enabled = True Then
                        Try
                            Dim myProxy As New WebProxy()
                            Dim newUri As New Uri("http://" & My.Settings.proxy_host & ":" & My.Settings.proxy_port)
                            myProxy.Address = newUri
                            myProxy.Credentials = New NetworkCredential(My.Settings.proxy_us, My.Settings.proxy_ps)
                            postReq.Proxy = myProxy
                        Catch ex As Exception
                            MsgBox(ex.Message.ToString, vbCritical)
                        End Try

                    End If

                    'cookie addition
                    Dim cookie_count As Integer = 0
                    While cookie_count < ListView1.Items.Count
                        tempCookies.Add(New Uri(urlz), _
                    New Cookie(ListView1.Items(cookie_count).Text, ListView1.Items(cookie_count).SubItems(1).Text))
                        cookie_count = cookie_count + 1
                    End While


                    'cookie addition
                    postReq.ProtocolVersion = New System.Version(proto.Text)
                    postReq.Method = method.Text
                    postReq.KeepAlive = True
                    postReq.CookieContainer = tempCookies
                    postReq.Referer = ref.Text
                    postReq.ContentType = ctyp.Text
                    postReq.UserAgent = usr.Text
                    postReq.Accept = acpt.Text
                    postReq.Headers.Add("Keep-Alive", "115")
                    'ADD HEADER
                    Dim HEADC As Integer = 0
                    While HEADC < ListView2.Items.Count
                        postReq.Headers.Add(ListView2.Items(HEADC).Text, ListView2.Items(HEADC).SubItems(1).Text)
                        HEADC = HEADC + 1
                    End While
                    'END
                    'RESPONSE
                    Dim myHttpWebResponse As HttpWebResponse = CType(postReq.GetResponse(), HttpWebResponse)
                    headers.Text += "HTTP/" + myHttpWebResponse.ProtocolVersion.ToString + " " + Str(myHttpWebResponse.StatusCode) + " " + myHttpWebResponse.StatusDescription.ToString + ControlChars.CrLf
                    Dim i As Integer
                    While i < myHttpWebResponse.Headers.Count
                        headers.Text += myHttpWebResponse.Headers.Keys(i) + ":" + myHttpWebResponse.Headers(i) + ControlChars.CrLf
                        i = i + 1
                    End While

                    Dim postreqreader As New StreamReader(myHttpWebResponse.GetResponseStream)
                    x = postreqreader.ReadToEnd
                    body.Text = x
                    myHttpWebResponse.Close()

                Catch xxx As Exception
                    headers.Text = xxx.Message.ToString
                End Try

            Else
                MsgBox("Unsupported Method!", vbCritical)
                Me.Close()
           
            End If

            Try

                If xenotix_main.ie.Checked = True And xenotix_main.gc.Checked = True And xenotix_main.ff.Checked = True Then
                    xenotix_main.web.DocumentText = x
                    xenotix_main.webkit.LoadHtml(x)
                    xenotix_main.gecko.LoadHtml(x)
                ElseIf xenotix_main.ie.Checked = True And xenotix_main.gc.Checked = True And xenotix_main.ff.Checked = False Then
                    xenotix_main.web.DocumentText = x
                    xenotix_main.webkit.LoadHtml(x)

                ElseIf xenotix_main.ie.Checked = True And xenotix_main.gc.Checked = False And xenotix_main.ff.Checked = False Then
                    xenotix_main.web.DocumentText = x

                ElseIf xenotix_main.ie.Checked = True And xenotix_main.gc.Checked = False And xenotix_main.ff.Checked = True Then
                    xenotix_main.web.DocumentText = x

                    xenotix_main.gecko.LoadHtml(x)
                ElseIf xenotix_main.ie.Checked = False And xenotix_main.gc.Checked = False And xenotix_main.ff.Checked = True Then

                    xenotix_main.gecko.LoadHtml(x)
                ElseIf xenotix_main.ie.Checked = False And xenotix_main.gc.Checked = True And xenotix_main.ff.Checked = False Then

                    xenotix_main.webkit.LoadHtml(x)

                ElseIf xenotix_main.ie.Checked = False And xenotix_main.gc.Checked = True And xenotix_main.ff.Checked = True Then

                    xenotix_main.webkit.LoadHtml(x)
                    xenotix_main.gecko.LoadHtml(x)
                End If
            Catch p As Exception
            End Try
        End If
    End Sub

    Private Sub Button2_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button2.Click
        On Error Resume Next
        Timer1.Enabled = False
        Me.Close()
    End Sub

    Private Sub proto_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles proto.TextChanged

    End Sub

    Private Sub Button11_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button11.Click
        Dim hname As String = InputBox("Enter the Header Name", "Header Name")
        Dim hval As String = InputBox("Enter the Header Value", "Header Value")
        If Not (hname = "") And (Not (hval = "")) Then

            Dim TempStr(1) As String
            Dim TempNode As ListViewItem
            TempStr(0) = hname
            TempStr(1) = hval
            TempNode = New ListViewItem(TempStr)
            ListView2.Items.Add(TempNode)
            hname = ""
            hval = ""
        End If
    End Sub

    Private Sub GroupBox2_Enter(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GroupBox2.Enter

    End Sub

    Private Sub Button13_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button13.Click
        On Error Resume Next
        For Each i As ListViewItem In ListView2.SelectedItems
            ListView2.Items.Remove(i)
        Next
    End Sub

    Private Sub Button12_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button12.Click
        On Error Resume Next
        ListView2.Items.Clear()
    End Sub

    Private Sub ListView1_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListView1.SelectedIndexChanged

    End Sub
End Class